eth_price =[ 427.52,
472.9,
480.36,
471.33,
466.28,
474.91,
410.17,
380.65,
360.4,
366.73,
354.39,
347.61,
332.39,
330.92,
333.36,
337.63,
316.72,
307.91,
314.68,
299.25,
320.88,
309.07,
294.66,
298.89,
296.26,
300.47,
305.71,
287.43,
291.69,
305.88,
307.75,
305.09,
296.3,
297.42,
296.53,
297.93,
298.33,
286.95,
295.45,
300.19,
304.01,
308.09,
314.32,
317.08,
333.38,
336.6,
339.63,
338.76,
304.14,
303.46,
299.87,
297.39,
308.61,
311.12,
308.59,
295.86,
292.66,
292.46,
297.48,
302.34,
301.46,
291.47,
299.15,
306.47,
287.44,
292.33,
282.48,
286.17,
264.31,
258.58,
283.74,
282.8,
293.5,
251.75,
246.52,
250.46,
213.91,
277.11,
291.46,
294.53,
288.75,
294.4,
296.5,
329.43,
334.34,
312.99,
295.17,
347.48,
348.98,
387.74,
383.04,
378.49,
370.67,
347.75,
347.89,
333.88,
331.92,
325.61,
317.52,
314.79,
321.59,
301.43,
297.47,
295.59,
301.46,
302.27,
289.82,
300.1,
298.06,
310.6,
308.86,
295.89,
296.03,
296.77,
269.18,
261.57,
256.51,
223.07,
225.34,
219.95,
226.77,
203.87,
197.98,
205.79,
193.12,
204.32,
203.95,
206.71,
224.71,
225.95,
229.48,
218.31,
227.26,
199.7,
234.39,
193.42,
157.36,
170.66,
199.66,
209.73,
230.77,
197.4,
215.36,
242.14,
251.7,
245.99,
270.55,
268.77,
273.3,
282.9,
287.99,
274.6,
294.92,
302.88,
327.93,
293.09,
272.69,
303.25,
323.7,
341.74,
336.37,
336.87,
359,
370.06,
371.46,
379.41,
370.23,
361.93,
359.05,
397.54,
401.49,
340.61,
337.67,
281.74,
261.67,
258.07,
264.47,
248.46,
245.33,
224.38,
223.78,
222.24,
230.67,
231.91,
194.91,
170.51,
157.76,
160.4,
174.45,
190.05,
181.95,
174.26,
157.94,
126.52,
129.53,
96.91,
89.86,
89.44,
92.41,
90.79,
90.84,
88.66,
89.88,
89.52,
91.16,
91.42,
94.01,
97.81,
94.4,
96.98,
79.72,
77.26,
76.3,
79.02,
68.38,
70.16,
62.17,
52.72,
49.89,
50.03,
48.49,
48.55,
48.22,
49.67,
48.31,
50.71,
48.3,
48.72,
49.1,
47.57,
50.22,
46.29,
43.41,
43.44,
43.27,
44.31,
42.16,
43.24,
45.3,
44.64,
44.36,
48.75,
50.7,
50.04,
52.21,
53.13,
50.77,
49.67,
50.52,
51.25,
53.11,
43.68,
42.34,
43.15,
43.39,
44.74,
34.16,
46.83,
46.35,
35.06,
28.65,
28.59,
23.44,
21.47,
19.33,
17.75,
16.65,
18.89,
19.61,
19.3,
18.62,
19.46,
19.03,
17.35,
15.82,
15.4,
14.52,
13.55,
13.07,
13.12,
12.6,
12.67,
12.43,
12.76,
12.81,
12.68,
12.9,
12.92,
13.03,
11.27,
11.4,
11.35,
11.28,
11.03,
11.43,
11.52,
11.39,
11.35,
11.43,
11.11,
10.82,
10.73,
10.73,
10.57,
10.48,
10.56,
10.54,
10.59,
10.57,
10.63,
10.82,
10.7,
10.91,
10.6,
10.4,
10.23,
10.3,
9.64,
9.9,
9.65,
9.77,
9.86,
9.72,
10.55,
10.33,
10.29,
9.87,
10.25,
10.25,
11.25,
9.73,
8.38,
8.17]

btc_price = [9888.61,
10058.8,
9818.35,
9330.55,
8790.92,
8253.69,
8038.77,
8253.55,
8071.26,
8200.64,
8036.49,
7790.15,
7708.99,
7871.69,
7315.54,
6635.75,
6559.49,
5950.07,
6357.6,
6618.14,
7143.58,
7459.69,
7144.38,
7022.76,
7407.41,
7379.95,
7207.76,
7078.5,
6767.31,
6468.4,
6130.53,
6153.85,
5753.09,
5780.9,
5904.83,
5750.8,
5526.64,
5930.32,
6008.42,
6031.6,
6011.45,
5708.52,
5590.69,
5605.51,
5725.59,
5678.19,
5831.79,
5647.21,
5446.91,
4826.48,
4781.99,
4772.02,
4610.48,
4426.89,
4370.81,
4328.41,
4229.36,
4317.48,
4409.32,
4403.74,
4338.71,
4163.07,
4174.73,
4200.67,
3892.35,
3926.07,
3682.84,
3792.4,
3630.7,
3631.04,
3905.95,
3924.97,
4065.2,
3582.88,
3625.04,
3637.52,
3154.95,
3882.59,
4130.81,
4161.27,
4122.94,
4226.06,
4228.75,
4599.88,
4597.12,
4376.53,
4236.31,
4582.96,
4578.77,
4892.01,
4703.39,
4565.3,
4579.02,
4382.66,
4382.88,
4352.4,
4371.6,
4334.68,
4151.52,
4100.52,
4001.74,
4087.66,
4193.7,
4160.62,
4331.69,
4376.63,
4181.93,
4325.13,
4073.26,
3884.71,
3650.62,
3381.28,
3342.47,
3419.94,
3378.94,
3213.94,
3252.91,
2895.89,
2804.73,
2710.67,
2718.26,
2875.34,
2757.18,
2726.45,
2809.01,
2671.78,
2529.45,
2576.48,
2754.86,
2730.4,
2810.12,
2667.76,
2817.6,
2273.43,
2318.88,
2228.41,
1929.82,
1998.86,
2233.34,
2357.9,
2398.84,
2337.79,
2372.56,
2518.44,
2571.34,
2518.66,
2608.56,
2601.99,
2601.64,
2564.06,
2506.47,
2434.55,
2480.84,
2539.32,
2574.79,
2552.45,
2478.45,
2589.41,
2608.72,
2744.91,
2705.41,
2689.1,
2721.79,
2589.6,
2548.29,
2655.88,
2518.56,
2464.58,
2506.37,
2717.02,
2659.63,
2958.11,
2947.71,
2823.81,
2805.62,
2732.16,
2863.2,
2686.81,
2511.81,
2515.35,
2488.55,
2407.88,
2286.41,
2175.47,
2255.61,
2155.8,
2038.87,
2202.42,
2304.98,
2443.64,
2320.42,
2173.4,
2041.2,
2084.73,
1987.71,
1888.65,
1839.09,
1734.45,
1738.43,
1808.91,
1804.91,
1724.24,
1848.57,
1787.13,
1755.36,
1723.35,
1596.71,
1578.8,
1555.45,
1537.67,
1490.09,
1452.82,
1421.6,
1347.89,
1321.79,
1316.48,
1317.73,
1281.08,
1265.49,
1250.15,
1207.21,
1231.71,
1222.05,
1229.08,
1210.29,
1211.67,
1193.91,
1182.94,
1172.52,
1167.54,
1169.28,
1200.37,
1205.01,
1187.13,
1187.87,
1175.95,
1176.9,
1182.68,
1124.78,
1133.25,
1143.81,
1102.17,
1080.5,
1071.79,
1026.43,
1039.97,
1047.15,
1045.77,
966.73,
972.78,
937.52,
1038.59,
1049.14,
1120.54,
1054.23,
1036.74,
973.82,
1100.23,
1187.81,
1249.61,
1240,
1231.92,
1221.38,
1175.83,
1116.72,
1188.49,
1150,
1223.54,
1272.83,
1267.12,
1255.15,
1274.99,
1251.01,
1222.5,
1179.97,
1179.97,
1165.2,
1143.84,
1173.68,
1166.72,
1117.44,
1115.3,
1079.98,
1047.87,
1054.42,
1046.21,
1027.44,
1007.48,
1004.55,
990.64,
999.18,
1004.45,
988.67,
994.38,
1063.07,
1061.35,
1038.15,
1027.34,
1042.9,
1029.91,
1011.8,
989.02,
970.4,
920.38,
919.5,
921.59,
919.75,
917.59,
901.54,
892.69,
921.01,
924.67,
921.79,
895.03,
899.07,
886.62,
907.94,
831.53,
821.8,
818.41,
823.98,
804.83,
777.76,
907.68,
902.83,
911.2,
908.59,
902.2,
1013.38,
1154.73,
1043.84,
1021.75,
998.33,]

#import matplotlib.pyplot as plt

# r = theta * pointX  + b #theta * x + b where x is the x-value of our data point
#theta = 1  # Initial slope of regression line
delta = 0.000001
alpha = 0.000001

# x coordinates are altcoin prices
# y coordinates are bitcoin prices
#m = length of the altcoin price array
#yi = bitcoin price for the current day
#xi = altcoin price for the current day
#theta = slope

def calculateRegressionY(x, t):  # calculate predicted btc price for given alt price
    return t * x
assert calculateRegressionY(2, 0.5) ==  1
assert calculateRegressionY(5, 0.1) == 0.5
assert calculateRegressionY(10, 0.25) == 2.5

def calculateCost(x, t):  # calculate difference between the ACTUAL bitcoin price per altcoin's price AND the estimated btc price for the given alt price
    return (getBTCPrice(x, altcoin_prices = eth_price) - calculateRegressionY(x, t)) ** 2

def evenArrays(a):  # evens arrays to match dates to nov29
    return btc_price[0:len(a)]

def getBTCPrice(altcoin_value, altcoin_prices=eth_price): #returns the ACTUAL bitcoin price per altcoin price
    return evenArrays(btc_price)[altcoin_prices.index(altcoin_value)]
assert getBTCPrice(2, [1, 2, 3]) == 10058.8
assert getBTCPrice(3, [1, 2, 3]) == 9818.35

'''
def calculateTotalCost(data, t):  # calculate cost of all points at theta
    sum = 0
    for i in data:
        sum += (calculateCost(i, t))
    return sum
''' #calculateTotalCost

def costDerivative(data, t):  # calculate derivative @ current theta
    sum = 0
    for i in data: #i is the altcoin price for the day
        sum += calculateRegressionY(i, t) * i - getBTCPrice(i)
    return sum / len(data)

def MACHINELEARNING(data, t):
    iterations = 0
    theta = t
    while delta < abs(costDerivative(data, theta)):
        if (costDerivative(data, theta) < 0):
            theta += alpha * costDerivative(data, theta)
            iterations += 1
            print(theta)
        else:
            theta -= alpha * costDerivative(data, theta)
            iterations += 1
            print(theta)
    print("Theta: " + str(theta) + " after " + str(iterations) + " iterations.")

MACHINELEARNING(eth_price, 1)





